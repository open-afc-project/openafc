apiVersion: apps/v1
kind: Deployment
metadata:
  name: afc-engine
  labels:
    {{- include "afc-engine.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: 1
  {{- end }}
  selector:
    matchLabels:
      {{- include "afc-engine.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "afc-engine.selectorLabels" . | nindent 8 }}
        afc: apache
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "afc-engine.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: afc-engine-cont
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: 110738915961.dkr.ecr.us-east-1.amazonaws.com/afc-server:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: https
              containerPort: 443
              protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /fbrat/www/index.html
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          volumeMounts:
            - mountPath: "/mnt/nfs"
              name: cont-confs
          env:
            # RabbitMQ server name:
            - name: BROKER_TYPE
              value: "external"
            - name: BROKER_FQDN
              value: {{ include "afc-engine.fullname" . }}-rmq
            # Filestorage params:
            - name: AFC_OBJST_HOST
              value: {{ include "afc-engine.fullname" . }}-objst
            - name: AFC_OBJST_PORT
              value: "5000"
            - name: AFC_OBJST_SCHEME
              value: "HTTP"
            - name: AFC_OBJST_HIST_HOST
              value: {{ include "afc-engine.fullname" . }}-objst
            # worker params
            - name: CELERY_TYPE
              value: external
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: cont-confs
          persistentVolumeClaim:
            claimName: cont-confs-claim
      imagePullSecrets:
        - name: ecr-docker-login
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
