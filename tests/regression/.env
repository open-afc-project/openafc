# --------------------------------------------------- #
# docker-compose.yaml variables                       #
# convention: Host volume VOL_H_XXX will be mapped    #
# as container's volume VOL_C_YYY                     #
# VOL_H_XXX:VOL_C_YYY                                 #
# --------------------------------------------------- #

# -= MUST BE defined =-
# Hostname for AFC server
AFC_SERVER_NAME="_"
# Wether to forward all http requests to https
AFC_ENFORCE_HTTPS=TRUE

# enable mTLS auth
AFC_ENFORCE_MTLS=false

# Host static DB root dir
VOL_H_DB=/opt/afc/databases/rat_transfer

# Container's static DB root dir (dont change it !)
VOL_C_DB=/mnt/nfs/rat_transfer

#RAT user to be used in containers
UID=1003
GID=1003

# Service handling AFC Requests - msghnd or afcserver
AFC_REQ_SERVER=afcserver
AFC_REQ_SERVER_PORT=8000

# AFC Proxy connection timeout # TODO: WTF IS THIS?
AFC_PROXY_CONN_TOUT=

# AFC service external PORTs configuration
# syntax:
# [IP]:<port | portN-portM>
# like 172.31.11.188:80-180
# where:
#  IP is  172.31.11.188
#  port range is 80-180

# Here we configuring range of external ports to be used by the service
# docker-compose randomly uses one port from the range

# Note 1:
# The IP arrdess can be skipped if there is only one external
# IP address (i.e. 80-180 w/o IP address is acceptable as well)

# Note 2:
# range of ports can be skipped . and just one port is acceptable as well

# all these valuase are acaptable:
# PORT=172.31.11.188:80-180
# PORT=172.31.11.188:80
# PORT=80-180
# PORT=80


# http ports range
EXT_PORT=172.31.11.188:80-180

# https host ports range
EXT_PORT_S=172.31.11.188:443-543


# -= ALS CONFIGURATION STUFF =-

# Port on which ALS Kafka server listens for clients
ALS_KAFKA_CLIENT_PORT_=9092

# ALS Kafka server host name
ALS_KAFKA_SERVER_=als_kafka

# Maximum ALS message size (default 1MB is too tight for GUI AFC Response)
ALS_KAFKA_MAX_REQUEST_SIZE_=10485760


# -= FS(ULS) DOWNLOADER CONFIGURATION STUFF =-

# Symlink pointing to current ULS database
ULS_CURRENT_DB_SYMLINK=FS_LATEST.sqlite3

ULS_ALARM_SMTP_INFO=
ULS_ALARM_EMAIL_TO=wcc-afc-swdev.pdl@broadcom.com
ULS_ALARM_ALARM_INTERVAL_HR=0
ULS_ALARM_SUCCESS_MAX_AGE_HR=9
ULS_ALARM_BEACON_INTERVAL_HR=0

# -= RCACHE SERVICE CONFIGURATION STUFF =-

# True (1, t, on, y, yes) to enable use of Rcache. False (0, f, off, n, no) to
# use legacy file-based cache. Default is True
RCACHE_ENABLED=True

# Port Rcache service listens os
RCACHE_CLIENT_PORT=8000

# Rcache update on send
RCACHE_UPDATE_ON_SEND=True

# Postgres

RATDB_POSTGRES_PASSWORD=postgres
RATDB_GUEST_PGDATA=/var/lib/pgsql/data
RATDB_POSTGRES_DB=fbrat

# MSGHND conf
AFC_MSGHND_PORT=

# WebUI conf
AFC_WEBUI_NAME=
AFC_WEBUI_PORT=

# Object Storage conf
AFC_OBJST_HOST=objst
AFC_OBJST_PORT=5000
AFC_OBJST_HIST_PORT=4999
AFC_OBJST_SCHEME=HTTP
AFC_OBJST_LOCAL_DIR=/storage

# Prometheus conf
AFC_PROMETHEUS_HOST=prometheus
AFC_PROMETHEUS_PORT=9090
AFC_PROMETHEUS_ENABLED=true

# RabbitMQ Broker conf
BROKER_TYPE=external
BROKER_FQDN=rmq

# Worker conf
AFC_WORKER_CELERY_WORKERS="rat_1 rat_2"
AFC_WORKER_ENG_TOUT=300

# -= SECRETS STUFF =-

# Host directory containing secret files
VOL_H_SECRETS=../../tools/secrets/empty_secrets
#VOL_H_SECRETS=/opt/afc/secrets

# Directory inside container where to secrets are mounted (always /run/secrets
# in Compose, may vary in Kubernetes)
VOL_C_SECRETS=/run/secrets



# -= OPTIONAL =-
# to work without tls/mtls,remove these variables from here
# if you have tls/mtls configuration, keep configuration
# files in these host volumes
VOL_H_SSL=./ssl
VOL_C_SSL=/usr/share/ca-certificates/certs
VOL_H_NGNX=./ssl/nginx
VOL_C_NGNX=/certificates/servers
