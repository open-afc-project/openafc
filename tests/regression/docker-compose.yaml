# check .env file for env vars info and values

version: '3.2'
services:
  ratdb:
    image: postgres:9
    restart: always
    environment:
      - POSTGRES_PASSWORD=N3SF0LVKJx1RAhFGx4fcw
      - PGDATA=/var/lib/pgsql/data
      - POSTGRES_DB=fbrat
    dns_search: [.]

  rmq:
    image: public.ecr.aws/w9v6y1o0/openafc/rmq-image:${TAG:-latest}
    restart: always
    dns_search: [.]

  nginx:
    image: public.ecr.aws/w9v6y1o0/openafc/ngnx-image:${TAG:-latest}
    restart: always
    ports:
      - "${EXT_MTLS_PORT}:443"
    volumes:
      - ${VOL_H_NGNX:-/tmp}:${VOL_C_NGNX:-/dummyngnx}
    environment:
      - AFC_MSGHND_NAME=msghnd
      - AFC_MSGHND_PORT=8000
    depends_on:
      - msghnd
    dns_search: [.]

  rat_server:
    image: 110738915961.dkr.ecr.us-east-1.amazonaws.com/afc-server:${TAG:-latest}
    ports:
      - "${EXT_PORT}:80"
      - "${EXT_PORT_S}:443"
    volumes:
      - ${VOL_H_DB}:${VOL_C_DB}
      - ${VOL_H_SSL:-/tmp}:${VOL_C_SSL:-/dummy1}
      - ${VOL_H_APACH:-/tmp}:${VOL_C_APACH:-/dummy2}
      - ./pipe:/pipe
    depends_on:
      - ratdb
      - rmq
      - objst
      - als_kafka
      - als_siphon
      - als_postgres
    dns_search: [.]
    environment:
      # RabbitMQ server name:
      - BROKER_TYPE=external
      - BROKER_FQDN=rmq
      # Filestorage params:
      - AFC_OBJST_HOST=objst
      - AFC_OBJST_PORT=5000
      - AFC_OBJST_SCHEME=HTTP
      - AFC_OBJST_HIST_HOST=objst
      # worker params
      - CELERY_TYPE=external
      # ALS params
      - ALS_KAFKA_SERVER_ID=rat_server
      - ALS_KAFKA_CLIENT_BOOTSTRAP_SERVERS=${ALS_KAFKA_SERVER_}:${ALS_KAFKA_CLIENT_PORT_}

  msghnd:
    image: 110738915961.dkr.ecr.us-east-1.amazonaws.com/afc-msghnd:${TAG:-latest}
    environment:
      # RabbitMQ server name:
      - BROKER_TYPE=external
      - BROKER_FQDN=rmq
      # Filestorage params:
      - AFC_OBJST_HOST=objst
      - AFC_OBJST_PORT=5000
      - AFC_OBJST_SCHEME=HTTP
      # ALS params
      - ALS_KAFKA_SERVER_ID=msghnd
      - ALS_KAFKA_CLIENT_BOOTSTRAP_SERVERS=${ALS_KAFKA_SERVER_}:${ALS_KAFKA_CLIENT_PORT_}
    dns_search: [.]
    depends_on:
      - ratdb
      - rmq
      - objst
      - als_kafka
      - als_siphon
      - als_postgres

  objst:
    image: public.ecr.aws/w9v6y1o0/openafc/objstorage-image:${TAG:-latest}
    environment:
      - AFC_OBJST_PORT=5000
      - AFC_OBJST_HIST_PORT=4999
      - AFC_OBJST_LOCAL_DIR=/storage
    dns_search: [.]

  worker:
    image: 110738915961.dkr.ecr.us-east-1.amazonaws.com/afc-worker:${TAG:-latest}
    volumes:
      - ${VOL_H_DB}:${VOL_C_DB}
      - ./pipe:/pipe
      - /opt/afc/work/yd889380/aep:/aep
    environment:
      # Filestorage params:
      - AFC_OBJST_HOST=objst
      - AFC_OBJST_PORT=5000
      - AFC_OBJST_SCHEME=HTTP
      # worker params
      - CELERY_OPTIONS=rat_1 rat_2
      # RabbitMQ server name:
      - BROKER_TYPE=external
      - BROKER_FQDN=rmq
      # afc-engine preload lib params
      - AFC_AEP_ENABLE=1
      - AFC_AEP_DEBUG=2
      - AFC_AEP_CACHE_MAX_FILE_SIZE=50000000
      - AFC_AEP_REAL_MOUNTPOINT=${VOL_C_DB}/3dep/1_arcsec
    depends_on:
      - ratdb
      - rmq
      - objst
    dns_search: [.]

  als_kafka:
    image: public.ecr.aws/w9v6y1o0/openafc/als-kafka-image:${TAG:-latest}
    restart: always
    environment:
      - KAFKA_ADVERTISED_HOST=${ALS_KAFKA_SERVER_}
      - KAFKA_CLIENT_PORT=${ALS_KAFKA_CLIENT_PORT_}
    dns_search: [.]

  als_siphon:
    image: public.ecr.aws/w9v6y1o0/openafc/als-siphon-image:${TAG:-latest}
    restart: always
    environment:
      - KAFKA_SERVERS=${ALS_KAFKA_SERVER_}:${ALS_KAFKA_CLIENT_PORT_}
      - POSTGRES_HOST=als_postgres
      - INIT_IF_EXISTS=skip
    depends_on:
      - als_kafka
      - als_postgres
    dns_search: [.]

  als_postgres:
    image: public.ecr.aws/w9v6y1o0/openafc/als-postgres-image:${TAG:-latest}
    dns_search: [.]
