# .bashrc

# Source global definitions
if [ -f /etc/bashrc ]; then
	. /etc/bashrc
fi

# User specific aliases and functions
EDITOR=vim
set -o vi
OS=`uname -s`

set_cmake()
{
  if [ ! -f "cmake3" ]; then
    alias cmake3='cmake'
  fi
}

export DISPLAY
export PS1="\[\e[32;1m\][\h]\[\e[0m\]:\w> "

# AFC project
alias afc_help='echo -e " \
	afc_wd - cd to workdir\n \
	afc_env - set env vars\n \
	afc_cm - run cmake on sources\n \
	afc_bld - run ninja-build \n \
	afc_ins - run ninja-build install \n \
    WORKINGDIR = ${WORKINGDIR} \n \
    N_THREADS = ${N_THREADS} \n \
    APIDOCDIR = ${APIDOCDIR} \n \
    LD_LIBRARY_PATH = ${LD_LIBRARY_PATH} \n \
"'
alias afc_env='pushd ./afc/open-afc && export GXK_OPENAFC_PROJ=`pwd`'
#alias afc_wd='pushd ./afc/open-afc && export GXK_OPENAFC_PROJ=`pwd` && \
#source /opt/rh/devtoolset-11/enable && \
#popd && \
#pushd ./afc/oafc_bld && export WORKINGDIR=`pwd` && \
#export N_THREADS=$(nproc --all) && \
#export APIDOCDIR=${WORKINGDIR}/testroot/share/doc/fbrat-api && \
#export LD_LIBRARY_PATH=${WORKINGDIR}/testroot/lib64
#'
alias afc_wrkr='pushd ./afc/open-afc && export GXK_OPENAFC_PROJ=`pwd` && \
popd && \
set_cmake && \
pushd ./afc/oafc_bld && export WORKINGDIR=`pwd` && \
export N_THREADS=$(nproc --all) && \
export APIDOCDIR=${WORKINGDIR}/testroot/share/doc/fbrat-api && \
export LD_LIBRARY_PATH=${WORKINGDIR}/testroot/lib64
'
alias afc_ser='pushd ./afc/open-afc && export GXK_OPENAFC_PROJ=`pwd` && \
popd && \
set_cmake && \
pushd ./afc/oafc_bld && export WORKINGDIR=`pwd` && \
export N_THREADS=$(nproc --all) && \
export APIDOCDIR=${WORKINGDIR}/testroot/share/doc/fbrat-api && \
export LD_LIBRARY_PATH=${WORKINGDIR}/testroot/lib64
'
alias afc_rcv='pushd ./afc/open-afc && export GXK_OPENAFC_PROJ=`pwd` && \
popd && \
set_cmake && \
pushd ./afc/oafc_bld && export WORKINGDIR=`pwd` && \
export N_THREADS=$(nproc --all) && \
export APIDOCDIR=${WORKINGDIR}/testroot/share/doc/fbrat-api && \
export LD_LIBRARY_PATH=${WORKINGDIR}/testroot/lib64 && \
export NODE_OPTIONS=--openssl-legacy-provider
'
alias afc_hnd='cd ./afc/open-afc && export GXK_OPENAFC_PROJ=`pwd` && \
cd ../../ && \
set_cmake && \
cd ./afc/oafc_bld && export WORKINGDIR=`pwd` && \
export N_THREADS=$(nproc --all) && \
export APIDOCDIR=${WORKINGDIR}/testroot/share/doc/fbrat-api && \
export LD_LIBRARY_PATH=${WORKINGDIR}/testroot/lib64
'
# alias afc_dbg='cmake3 -DCMAKE_INSTALL_PREFIX=/usr \
#               -DCMAKE_PREFIX_PATH=/usr \
#               -DAPIDOC_INSTALL_PATH=${APIDOCDIR} \
#               -DBOOST_INCLUDEDIR=/usr/include/boost169 \
#               -DBOOST_LIBRARYDIR=/usr/lib64/boost169 \
#               -DBUILD_WITH_COVERAGE=off \
#               -DCMAKE_BUILD_TYPE=DebugWithTest \
#               -G Ninja ${GXK_OPENAFC_PROJ}'

alias afc_dbg='cmake3 -DCMAKE_INSTALL_PREFIX=/usr \
              -DCMAKE_PREFIX_PATH=/usr \
              -DAPIDOC_INSTALL_PATH=${APIDOCDIR} \
              -DBOOST_INCLUDEDIR=/usr/include/boost169 \
              -DBOOST_LIBRARYDIR=/usr/lib64/boost169 \
              -DBUILD_WITH_COVERAGE=off \
              -DCMAKE_BUILD_TYPE=Debug \
              -DDEBUG_AFC=1 \
              -S . -B /wd/afc/oafc_bld'

alias afc_rel='cmake3 -DCMAKE_INSTALL_PREFIX=/usr \
              -DCMAKE_PREFIX_PATH=/usr \
              -DAPIDOC_INSTALL_PATH=${APIDOCDIR} \
              -DBOOST_INCLUDEDIR=/usr/include/boost169 \
              -DBOOST_LIBRARYDIR=/usr/lib64/boost169 \
              -DBUILD_WITH_COVERAGE=off \
              -DCMAKE_BUILD_TYPE=Release \
              -G Ninja ${GXK_OPENAFC_PROJ}'
alias afc_eng='cmake3 -DCMAKE_INSTALL_PREFIX=/usr \
              -DCMAKE_PREFIX_PATH=/usr \
              -DAPIDOC_INSTALL_PATH=${APIDOCDIR} \
              -DBOOST_INCLUDEDIR=/usr/include/boost169 \
              -DBOOST_LIBRARYDIR=/usr/lib64/boost169 \
              -DBUILD_WITH_COVERAGE=off \
              -DCMAKE_BUILD_TYPE=EngineDebug \
              -DDEBUG_AFC=1 \
              -G Ninja ${GXK_OPENAFC_PROJ}'
alias afc_engrat='cmake3 -DCMAKE_INSTALL_PREFIX=/usr \
              -DCMAKE_PREFIX_PATH=/usr \
              -DAPIDOC_INSTALL_PATH=${APIDOCDIR} \
              -DBOOST_INCLUDEDIR=/usr/include/boost169 \
              -DBOOST_LIBRARYDIR=/usr/lib64/boost169 \
              -DBUILD_WITH_COVERAGE=off \
              -DCMAKE_BUILD_TYPE=EngineRatapiDebug \
              -G Ninja ${GXK_OPENAFC_PROJ}'
alias afc_engrat_rel='cmake3 -DCMAKE_INSTALL_PREFIX=/usr \
              -DCMAKE_PREFIX_PATH=/usr \
              -DAPIDOC_INSTALL_PATH=${APIDOCDIR} \
              -DBOOST_INCLUDEDIR=/usr/include/boost169 \
              -DBOOST_LIBRARYDIR=/usr/lib64/boost169 \
              -DBUILD_WITH_COVERAGE=off \
              -DCMAKE_BUILD_TYPE=EngineRatapiRelease \
              -G Ninja ${GXK_OPENAFC_PROJ}'
alias afc_rat='cmake3 -DCMAKE_INSTALL_PREFIX=/usr \
              -DCMAKE_PREFIX_PATH=/usr \
              -DCMAKE_BUILD_TYPE=RatapiDebug \
              -G Ninja ${GXK_OPENAFC_PROJ}'
alias afc_rat_rel='cmake3 -DCMAKE_INSTALL_PREFIX=/usr \
              -DCMAKE_PREFIX_PATH=/usr \
              -DCMAKE_BUILD_TYPE=RatapiRelease \
              -G Ninja ${GXK_OPENAFC_PROJ}'
alias afc_ratweb='cmake3 -DCMAKE_INSTALL_PREFIX=/usr \
              -DCMAKE_PREFIX_PATH=/usr \
              -DCMAKE_BUILD_TYPE=RatapiWebDebug \
              -DSVN_LAST_REVISION=localbuild \
              -G Ninja ${GXK_OPENAFC_PROJ}'
alias afc_uls='cmake3 -DCMAKE_INSTALL_PREFIX=/usr \
              -DCMAKE_PREFIX_PATH=/usr \
              -DCMAKE_BUILD_TYPE=Ulsprocessor \
              -G Ninja ${GXK_OPENAFC_PROJ}'
alias afc_rat_bld='ninja -j $N_THREADS'
alias afc_rat_ins='ninja install'
#alias afc_bld='ninja-build -j$N_THREADS'
#alias afc_ins='ninja-build install -j$N_THREADS'

alias afc_test='./testroot/bin/afc-engine --request-type=PointAnalysis --state-root=/var/lib/fbrat --input-file-path=/tmp/PointAnalysis-6da9afa8-9626-4df3-b700-79d00d6530c3/analysisRequest.json.gz  --config-file-path=/tmp/PointAnalysis-6da9afa8-9626-4df3-b700-79d00d6530c3/afc_config.json --output-file-path=/tmp/PointAnalysis-6da9afa8-9626-4df3-b700-79d00d6530c3/analysisResponse.json.gz --temp-dir=/tmp/PointAnalysis-6da9afa8-9626-4df3-b700-79d00d6530c3 --log-level=info'
alias afc_test1='./testroot/bin/afc-engine --request-type=PointAnalysis --state-root=/var/lib/fbrat --input-file-path=/tmp/PointAnalysis-001/analysisRequest.json.gz  --config-file-path=/tmp/PointAnalysis-001/afc_config.json --output-file-path=/tmp/PointAnalysis-001/analysisResponse.json.gz --temp-dir=/tmp/PointAnalysis-001 --log-level=debug'
alias afc_cm='cmake3 -DCMAKE_INSTALL_PREFIX=/usr \
             -DCMAKE_PREFIX_PATH=/usr \
             -DAPIDOC_INSTALL_PATH=${APIDOCDIR} \
             -DBOOST_INCLUDEDIR=/usr/include/boost169 \
             -DBOOST_LIBRARYDIR=/usr/lib64/boost169 \
             -DBUILD_WITH_COVERAGE=off \
             -G Ninja ${GXK_OPENAFC_PROJ}'
alias afc_cm1='cmake3 -DCMAKE_INSTALL_PREFIX=/usr \
             -DCMAKE_PREFIX_PATH=/usr \
             -DAPIDOC_INSTALL_PATH=${APIDOCDIR} \
             -DBOOST_INCLUDEDIR=/usr/include/boost169 \
             -DBOOST_LIBRARYDIR=/usr/lib64/boost169 \
             -DBUILD_WITH_COVERAGE=off \
             -G Ninja ${GXK_OPENAFC_PROJ}'

# apachectl -k restart
alias apa_re='apachectl -k restart'
# celery multi restart rat_1 rat_2 -A ratapi.tasks.afc_worker --pidfile=/var/run/celery/%n.pid --logfile=/proc/self/fd/2 --loglevel=DEBUG
alias cel_re='celery multi restart rat_1 rat_2 -A ratapi.tasks.afc_worker --pidfile=/var/run/celery/%n.pid --logfile=/proc/self/fd/2 --loglevel=DEBUG'

alias difff='diff -pbBwuN'

# FIND
alias findf='find `pwd` -type f -follow'
alias findd='find `pwd` -type d -follow'
alias findg="find `pwd` -type f -follow | xargs grep \!*"
alias findch="find `pwd` -type f -name '*.[c|h]'"
alias findchg="find `pwd` -type f -name '*.[c|h]' | xargs grep \!*"
#GREP
alias g='grep'
alias gk='grep -r --exclude-dir={.git,.svn} --exclude={tags,*~,*.swp,*.o,*.ko,cscope.out}'
alias gkl='grep -rl --exclude-dir={.git,.svn} --exclude={tags,*~,*.swp,*.o,*.ko,cscope.out}'
#GIT
alias gb='git branch'
alias gba='git branch -a'
alias gc='git commit -v'
alias gd='git diff'
alias gl='git pull'
alias gp='git push'
alias gst='git status'
alias glo='git log --oneline'

alias j='jobs'
alias l='less'
alias rm='rm -i'
alias mv='mv -i'
alias cp='cp -i'
alias ls='ls --color=auto'
alias ll='ls -l'
alias lla='ls -la'

alias wm0="wmctrl -s 0"
alias wm1="wmctrl -s 1"
alias wm2="wmctrl -s 2"
alias wm3="wmctrl -s 3"
alias wm4="wmctrl -s 4"
alias wm5="wmctrl -s 5"
alias wm6="wmctrl -s 6"
alias wm7="wmctrl -s 7"
alias wm8="wmctrl -s 8"
alias wm9="wmctrl -s 9"
alias wm10="wmctrl -s 10"
alias wm11="wmctrl -s 11"
alias wm12="wmctrl -s 12"
alias wm13="wmctrl -s 13"
